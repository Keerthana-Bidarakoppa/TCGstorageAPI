name: TCGstorageAPI build

on:
  push:
    branches:
      - Python2.7

jobs:
  build:
    name: TCGstorageAPI_build
    # This job runs on Linux
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout git submodules
        run: git submodule update --init --recursive 
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt install python2.7-minimal
          sudo apt install python-pip
          sudo apt-get install -y --no-install-recommends python-all python-all-dev
          sudo apt-get install libgnutls28-dev
          sudo apt-get install libboost-all-dev
      - name: Install python requirement packages
        run: |
          sudo apt-get install python-setuptools
          pip install --no-cache-dir -r requirements.txt
      - name: Build opensea
        run: python setup.py opensea
      - name: Build TCGstorageAPI package
        run: python setup.py build
        
      - name: Download Coverity Build Tool
        run: |
          wget -q https://scan.coverity.com/download/cxx/linux64 --post-data "token=$TOKEN&project=ruby" -O cov-analysis-linux64.tar.gz
          mkdir cov-analysis-linux64
          tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

      - name: Fixed world writable dirs
        run: |
          chmod go-w $HOME
          sudo chmod -R go-w /usr/share
      - name: Run autoconf
        run: autoconf

      - name: Configure
        run: ./configure

      - name: Build with cov-build
        run: |
          export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
          cov-build --dir cov-int make
      - name: Submit the result to Coverity Scan
        run: |
          tar czvf TCgstorageAPI.tgz cov-int
          curl \
            --form project=TCGstorageAPI \
            --form token=$TOKEN \
            --form file=@TCGstorageAPI.tgz \
            --form version=trunk \
            --form description="`./TCGstorageAPI -v`" \
            https://scan.coverity.com/builds?project=TCGstorageAPI
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
